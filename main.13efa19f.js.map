{"version":3,"sources":["scripts/main.js"],"names":["prevETarget","tHead","document","querySelector","tBody","th","querySelectorAll","clickCounter","columnNames","getArrayColumnNames","officeLocations","body","createForm","createElement","append","form","classList","action","method","columnName","label","input","select","textContent","name","dataset","qa","toLowerCase","officeLocation","option","value","type","button","handler","e","activeRow","item","target","tr","remove","undefined","sortASC","sortDESC","addEventListener","once","parentNode","preventDefault","data","FormData","objectWithData","Object","fromEntries","entries","newTr","newDiv","p","className","style","display","alignItems","justifyContent","get","length","add","stringToNumber","newTd","formatInputSalary","reset","setTimeout","text","td","element","cellIndex","isNaN","includes","forEach","key","cellValue","capture","arrayColumnNames","push","getArrayEmployees","arrayEmployees","employeeData","person","i","children","sort","a","b","localeCompare","counter","rows","cells","string","split","join","replace","toLocaleString"],"mappings":"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","file":"main.13efa19f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tHead = document.querySelector('thead');\nconst tBody = document.querySelector('tbody');\nconst th = tHead.querySelectorAll('th');\nlet clickCounter = 0;\nlet prevETarget;\nconst columnNames = getArrayColumnNames(th);\nconst officeLocations = ['Tokyo', 'Singapore', 'London',\n  'New York', 'Edinburgh', 'San Francisco'];\n\n// create form\nconst body = document.querySelector('body');\nconst createForm = document.createElement('form');\n\nbody.append(createForm);\n\nconst form = document.querySelector('form');\n\nform.classList = 'new-employee-form';\nform.action = '/';\nform.method = 'GET';\n\n//  add fields in form\nfor (const columnName of columnNames) {\n  const label = document.createElement('label');\n  const input = document.createElement('input');\n  const select = document.createElement('select');\n\n  form.append(label);\n  label.textContent = `${columnName}:`;\n\n  if (columnName === 'Office') {\n    label.append(select);\n    select.name = columnName;\n    select.dataset.qa = columnName.toLowerCase();\n\n    for (const officeLocation of officeLocations) {\n      const option = document.createElement('option');\n\n      select.append(option);\n\n      option.value = officeLocation;\n      option.textContent = officeLocation;\n    }\n  } else {\n    label.append(input);\n    input.name = columnName;\n\n    if (columnName === 'Name' || columnName === 'Position') {\n      input.type = 'text';\n    } else {\n      input.type = 'number';\n    }\n    input.dataset.qa = columnName.toLowerCase();\n  }\n}\n\n// add button\nconst button = document.createElement('button');\n\nform.append(button);\nbutton.type = 'submit';\nbutton.textContent = 'Save to table';\n\n// sort columns by click\nconst handler = (e) => {\n  const activeRow = tBody.querySelector('.active');\n  const item = e.target.textContent;\n  const tr = tBody.querySelectorAll('tr');\n\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n\n  if (prevETarget === undefined || item !== prevETarget) {\n    clickCounter = 0;\n    prevETarget = item;\n  }\n\n  if (clickCounter % 2 === 0) {\n    sortASC(item, tr);\n  } else {\n    sortDESC(item, tr);\n  }\n\n  clickCounter++;\n};\n\ntHead.addEventListener('click', handler, {\n  once: false,\n});\n\n// highlite row by click\ntBody.addEventListener('click', (e) => {\n  const item = e.target.parentNode;\n  const activeRow = tBody.querySelector('.active');\n\n  if (activeRow) {\n    activeRow.classList.remove('active');\n  }\n\n  item.classList = 'active';\n});\n\n// save, validate data from field by click, add notifications\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const data = new FormData(form);\n  const objectWithData = Object.fromEntries(data.entries());\n\n  const newTr = document.createElement('tr');\n  const newDiv = document.createElement('div');\n  const p = document.createElement('p');\n\n  newDiv.dataset.qa = 'notification';\n  newDiv.className = 'notification';\n  newDiv.style.display = 'flex';\n  newDiv.style.alignItems = 'center';\n  newDiv.style.justifyContent = 'center';\n  document.body.append(newDiv);\n  newDiv.append(p);\n\n  if (data.get('Name').length < 4) {\n    newDiv.classList.add('error');\n    p.textContent = 'Error. Please enter the right name!';\n  } else if (data.get('Age') < 18 || data.get('Age') > 90) {\n    newDiv.classList.add('error');\n    p.textContent = 'Error. Please enter the right age!';\n  } else if (data.get('Position').length === 0) {\n    newDiv.classList.add('error');\n    p.textContent = 'Error. Please fill the position!';\n  } else if (data.get('Salary').length === 0\n    || stringToNumber(data.get('Salary')) <= 0) {\n    newDiv.classList.add('error');\n    p.textContent = 'Error. Please enter the right salary!';\n  } else {\n    tBody.append(newTr);\n\n    for (const value in objectWithData) {\n      const newTd = document.createElement('td');\n\n      newTr.append(newTd);\n\n      if (value === 'Salary') {\n        newTd.textContent = formatInputSalary(objectWithData[value]);\n      } else {\n        newTd.textContent = objectWithData[value];\n      }\n    }\n    document.body.append(newDiv);\n    newDiv.classList.add('success');\n    p.textContent = 'Success';\n  }\n\n  form.reset();\n\n  setTimeout(() => {\n    newDiv.remove();\n  }, 2000);\n}, {\n  once: false,\n});\n\n// doubleclick on the cell, enter, blur\nconst td = tBody.querySelectorAll('td');\nlet text;\n\nfor (const element of td) {\n  const input = document.createElement('input');\n  const select = document.createElement('select');\n\n  // dblclick\n  element.addEventListener('dblclick', (e) => {\n    text = element.textContent;\n\n    const item = e.target;\n\n    item.textContent = '';\n\n    if (element.cellIndex === 2) {\n      item.append(select);\n      select.name = text;\n\n      for (const officeLocation of officeLocations) {\n        const option = document.createElement('option');\n\n        select.append(option);\n\n        option.value = officeLocation;\n        option.textContent = officeLocation;\n      }\n      select.value = text;\n    } else {\n      item.append(input);\n      input.classList = 'cell-input';\n\n      if (stringToNumber(text) < 0) {\n        const newDiv = document.createElement('div');\n\n        newDiv.dataset.qa = 'notification';\n        newDiv.className = 'notification';\n        document.body.append(newDiv);\n      }\n      input.value = text;\n\n      if (isNaN(stringToNumber(text))) {\n        input.type = 'text';\n      } else if (text.includes('$')) {\n        input.type = 'number';\n        input.value = stringToNumber(text);\n      } else {\n        input.type = 'number';\n      }\n    }\n  }, {\n    once: false,\n  });\n\n  // blur and enter addEventListeners\n  text = element.textContent;\n\n  ['blur', 'keypress']\n    .forEach((action) => element.addEventListener(action, (e) => {\n      if (e.key === 'Enter' || e.type === 'blur') {\n        if ((input.value < 0 || input.value.length === 0)\n          && element.cellIndex !== 2) {\n          const newDiv = document.createElement('div');\n\n          newDiv.dataset.qa = 'notification';\n          newDiv.className = 'notification';\n          document.body.append(newDiv);\n          newDiv.classList.add('error');\n\n          if (element.cellIndex === 3) {\n            newDiv.textContent = 'Error. Please enter the right age!';\n          } else if (element.cellIndex === 4) {\n            newDiv.textContent = 'Error. Please enter the right salary!';\n          } else if (element.cellIndex === 0 || element.cellIndex === 1) {\n            newDiv.textContent = 'Error. Please enter value!';\n          }\n\n          element.textContent = text;\n        } else if (input.value.length === 0 && element.cellIndex !== 2) {\n          element.textContent = text;\n        } else {\n          let cellValue;\n          const cellIndex = element.cellIndex;\n\n          if (cellIndex === 2) {\n            cellValue = select.value;\n          } else if (cellIndex === 4) {\n            cellValue = formatInputSalary(input.value);\n          } else {\n            cellValue = input.value;\n          }\n          element.textContent = cellValue;\n        }\n\n        element.classList.remove();\n        input.remove();\n        text = element.textContent;\n      }\n    },\n    {\n      once: false,\n      capture: true,\n    }));\n}\n\n// functions\nfunction getArrayColumnNames(element) {\n  const arrayColumnNames = [];\n\n  for (const item of element) {\n    arrayColumnNames.push(item.textContent);\n  }\n\n  return arrayColumnNames;\n}\n\nfunction getArrayEmployees(element) {\n  const arrayEmployees = [];\n  const arrayColumnNames = getArrayColumnNames(th);\n\n  for (const employeeData of element) {\n    const person = {};\n\n    for (let i = 0; i < employeeData.children.length; i++) {\n      person[arrayColumnNames[i]] = employeeData.children[i].textContent;\n    }\n\n    arrayEmployees.push(person);\n  }\n\n  return arrayEmployees;\n}\n\nfunction sortASC(columnName, element) {\n  const arrayEmployees = getArrayEmployees(element);\n\n  if (columnName === 'Name' || columnName === 'Position'\n    || columnName === 'Office') {\n    arrayEmployees.sort((a, b) => a[columnName].localeCompare(b[columnName]));\n  } else {\n    arrayEmployees.sort((a, b) => stringToNumber(a[columnName])\n      - stringToNumber(b[columnName]));\n  }\n\n  for (let i = 0; i < arrayEmployees.length; i++) {\n    let counter = 0;\n\n    for (const value in arrayEmployees[i]) {\n      tBody.rows[i].cells[counter].textContent = arrayEmployees[i][value];\n      counter++;\n    }\n  }\n}\n\nfunction sortDESC(columnName, element) {\n  const arrayEmployees = getArrayEmployees(element);\n\n  if (columnName === 'Name' || columnName === 'Position'\n    || columnName === 'Office') {\n    arrayEmployees.sort((a, b) => b[columnName].localeCompare(a[columnName]));\n  } else {\n    arrayEmployees.sort((a, b) => stringToNumber(b[columnName])\n      - stringToNumber(a[columnName]));\n  }\n\n  for (let i = 0; i < arrayEmployees.length; i++) {\n    let counter = 0;\n\n    for (const value in arrayEmployees[i]) {\n      tBody.rows[i].cells[counter].textContent = arrayEmployees[i][value];\n      counter++;\n    }\n  }\n}\n\nfunction stringToNumber(string) {\n  const resultNumber = string.split(',').join('').replace('$', '');\n\n  return +resultNumber;\n}\n\nfunction formatInputSalary(string) {\n  const number = stringToNumber(string);\n\n  return '$' + number.toLocaleString();\n}\n"]}